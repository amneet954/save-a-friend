{"version":3,"sources":["store/user.js","store/report.js","store/allReports.js","store/comment.js","store/index.js","history.js","components/style/index.js","components/childComponents/AllReportsLogic.js","components/childComponents/Comment.js","components/childComponents/GenericPage.js","components/childComponents/ResponsiveNavbar.js","components/childComponents/Search.js","components/NavigationBar.js","components/Authentication.js","components/Home.js","components/CreateReportForm.js","components/AllReports.js","components/Map.js","components/SinglePet.js","components/FoundPets.js","components/ErrorPage.js","components/SearchPage.js","components/AboutUs.js","App.js","reportWebVitals.js","index.js"],"names":["defaultUser","GET_USER","REGISTER_USER","REMOVE_USER","UPDATE_INFO","getUser","user","type","registerUser","updateInfo","login","username","password","dispatch","a","axios","method","data","withCredentials","url","response","console","log","error","updatingUserInfo","email","updateType","register","userReducer","state","action","defaultReport","CREATE_REPORT","FOUND_PET","GET_REPORT","createReport","report","getReport","singleReport","gettingSingleReport","petId","baseURL","commentReponse","commentData","reportCreation","formData","userId","get","petName","reportReducer","foundPet","FOUND_OR_LOST","GET_REPORTS","GET_SEARCH_RESULTS","LOCAL_ACTIVE_PETS","gettingFoundPetsType","truthy","petList","Error","allReports","searchResults","localActivePets","initialState","CREATE_COMMENT","createComment","comment","creatingComment","petCommentId","content","commentReducer","reducer","combineReducers","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","persistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","persistor","persistStore","createBrowserHistory","prefersDarkMode","window","matchMedia","matches","backgroundColor","textColor","useStyles","makeStyles","theme","appBar","background","authGrid","marginTop","paddingBottom","paddingLeft","paddingRight","authPaper","marginLeft","marginRight","authPaperContainer","paddingTop","authFailureMessage","authSecondaryButtons","color","authSecondaryButtonContainer","authText","textAlign","authTextField","marginBottom","authTextContainer","buttonCenter","margin","display","cardContent","padding","commentButton","commentContent","commentField","commentItem","commentPostedAt","commentSubmit","commentUnauth","commentUsername","footer","bottom","footerIcon","fontSize","footerLink","footerText","footerTypography","gridContainer","gridItem","gridPadding","image","width","linkDecoration","textDecoration","loginFields","mapContainer","mapPopUp","mapRedirectButton","mapZoomOutButton","markerCount","navBarLink","navbarTitle","flexGrow","navAuth","outSearchLayer","pageInfo","paperCommentHeader","paperCommentTypography","reportContainer","reportTextField","singlePetBody","singlePetDate","singlePetImage","singlePetTitle","textFieldCenter","title","titlePadding","uploadImage","whiteText","zoomOutButton","loginRegisterButton","tabs","logoTabs","tabsContainer","logoTabColor","icons","iconLogo","navBarcolor","responsiveContainer","responsiveButtonContainer","responsiveMenuIconToggle","tabHeight","minHeight","height","reportFormTitles","reactMap","reactMapButtons","navTabs","navLightModeBar","searchBarMargin","searchBarContainer","AllReportsLogic","classes","Grid","container","span","className","map","pet","idx","item","xs","sm","Card","CardMedia","component","alt","petImageName","CardContent","Typography","gutterBottom","variant","found","createdAt","lastPlaceSeen","CardActions","Button","size","fullWidth","href","_id","Comment","allComments","updateComments","useState","setContent","useDispatch","event","preventDefault","commentTitle","length","Paper","Divider","time","index","lastIndexOf","firstTime","slice","lastIdx","AMorPM","wrap","spacing","Avatar","justifyContent","zeroMinWidth","onSubmit","TextField","required","label","onChange","target","value","GenericPage","useEffect","scrollTo","Container","ResponsiveNavbar","unauthNavLinks","history","userID","useHistory","useSelector","openDrawer","setOpenDrawer","routeTo","push","responsiveBackgroundColor","listBackgroundColor","listColor","Drawer","anchor","paper","onClose","open","onOpen","List","ListItem","link","divider","button","onClick","ListItemIcon","ListItemText","IconButton","disableRipple","Search","filter","setFilter","onRequestSearch","sessionStorage","setItem","onCancelSearch","NavigationBar","useMediaQuery","createMuiTheme","responsiveFontSizes","logOut","headers","setValue","isMatch","breakpoints","down","icon","style","AppBar","elevation","Toolbar","to","Tab","root","Tabs","e","newValue","TabIndicatorProps","Box","sx","borderBottom","UserFields","setUsername","setPassword","passwordConfirm","setPasswordConfirm","setEmail","setUpdateType","setComplete","loginFail","setLoginFail","failReason","setFailReason","userAction","clearUserFields","passwordCheck","infoFields","function","eventName","secondMenu","msg","valueChange","array","auth","getItem","field","name","inputProps","Alert","severity","changeUserFields","Home","contentObj","CreateReportForm","setPetName","setLastPlace","redirect","setRedirect","uploadedImageUrl","setUploadedImageUrl","uploadedImage","setUploadedImage","alert","FormData","contactEmail","append","fields","maxWidth","URL","createObjectURL","files","src","trim","AllReports","Map","match","zipCodes","setZipCodes","initalDispatch","obj","i","current","geo","longitude","latitude","zoom","viewport","setViewport","notSwitched","setNotSwitched","Object","keys","hasOwnProperty","ObjSize","mapRef","useRef","points","properties","cluster","crimeId","category","geometry","coordinates","parseFloat","bounds","getMap","getBounds","toArray","flat","useSupercluster","options","radius","maxZoom","clusters","supercluster","selectedObj","setSelectObj","multSelectedObj","setMultObjs","minZoom","mapboxApiAccessToken","process","mapStyle","onViewportChange","handleViewportChange","ref","attributionControl","isCluster","pointCount","point_count","expansionZoom","getClusterExpansionZoom","id","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","coords","long","toFixed","toString","lat","arrObj","names","Number","indexOf","innerWidth","innerHeight","closeButton","singularPet","query","SinglePet","petFoundRedirect","setPetFoundRedirect","allState","params","FoundPets","ErrorPage","SearchPage","setSearchResults","searchValue","getResult","AboutUs","routes","path","Authentication","App","useMemo","createTheme","palette","mode","typography","fontFamily","join","Footer","currentYear","Date","getFullYear","inline","ThemeProvider","CssBaseline","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5971baee.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//Initial State\nconst defaultUser = {};\n\n//Action Types\nconst GET_USER = \"GET_USER\";\nconst REGISTER_USER = \"REGISTER_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\nconst UPDATE_INFO = \"UPDATE_INFO\";\n\n//Action Creators\nconst getUser = (user) => ({ type: GET_USER, user });\nconst registerUser = (user) => ({ type: REGISTER_USER, user });\nconst removeUser = () => ({ type: REMOVE_USER });\nconst updateInfo = (user) => ({ type: UPDATE_INFO, user });\n\n//Thunks\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"POST\",\n      data: {\n        username: username,\n        password: password,\n      },\n      withCredentials: true,\n      url: \"http://localhost:4000/auth/login\",\n    });\n    let { data } = response;\n    dispatch(getUser(data));\n  } catch (error) {\n    console.log(error);\n    dispatch(getUser({ error: error }));\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios({\n      method: \"DELETE\",\n      withCredentials: true,\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      url: \"http://localhost:4000/auth/logout\",\n    });\n    dispatch(removeUser());\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const me = () => async (dispatch) => {\n  try {\n    const response = await axios.get(\"http://localhost:4000/auth/\");\n    const { data } = response;\n    dispatch(getUser(data || defaultUser));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const updatingUserInfo =\n  (username, password, email, updateType) => async (dispatch) => {\n    try {\n      let response = await axios({\n        method: \"POST\",\n        data: {\n          username,\n          password,\n          email,\n          updateType,\n        },\n        withCredentials: true,\n        url: \"http://localhost:4000/auth/updateUserInfo\",\n      });\n      let { data } = response;\n      dispatch(updateInfo(data));\n    } catch (error) {\n      return dispatch(updateInfo({ error: error }));\n    }\n  };\n\nexport const register = (username, password, email) => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"POST\",\n      data: {\n        username: username,\n        password: password,\n        email: email,\n      },\n      withCredentials: true,\n      url: \"http://localhost:4000/auth/register\",\n    });\n    let { data } = response;\n    dispatch(registerUser(data));\n  } catch (error) {\n    return dispatch(registerUser({ error: error }));\n  }\n};\n\n//Reducer\nlet userReducer = (state = defaultUser, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case REGISTER_USER:\n      return action.user;\n    case REMOVE_USER:\n      return defaultUser;\n    case UPDATE_INFO:\n      return action.user;\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","import axios from \"axios\";\n\n//Initial State\nconst defaultReport = {};\n\n//Action Types\nconst CREATE_REPORT = \"CREATE_REPORT\";\nconst FOUND_PET = \"FOUND_PET\";\nconst GET_REPORT = \"GET_REPORT\";\n\n//Action Creators\nconst createReport = (report) => ({ type: CREATE_REPORT, report });\nconst foundPet = (foundPet) => ({ type: FOUND_PET, foundPet });\nconst getReport = (singleReport) => ({ type: GET_REPORT, singleReport });\n\n//Thunks\nexport const gettingSingleReport = (petId) => async (dispatch) => {\n  try {\n    const response = await axios({\n      method: \"GET\",\n      baseURL: `http://localhost:4000/report/pet/${petId}`,\n    });\n    let { data } = response;\n\n    let commentReponse = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      baseURL: `http://localhost:4000/comment/${petId}`,\n    });\n    let commentData = commentReponse.data;\n\n    dispatch(getReport({ data, commentData }));\n  } catch (error) {\n    console.log(error);\n    dispatch(getReport({ error: error }));\n  }\n};\n\nexport const petWasFound = (petId) => async (dispatch) => {\n  try {\n    await axios({\n      method: \"PUT\",\n      baseURL: `http://localhost:4000/report/pet/found/${petId}`,\n      withCredentials: true,\n    });\n\n    const response = await axios({\n      method: \"GET\",\n      baseURL: `http://localhost:4000/report/pet/${petId}`,\n    });\n    let { data } = response;\n\n    let commentReponse = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      baseURL: `http://localhost:4000/comment/${petId}`,\n    });\n    let commentData = commentReponse.data;\n\n    dispatch(foundPet({ data, commentData }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const reportCreation = (formData) => async (dispatch) => {\n  try {\n    let userId = formData.get(\"userId\");\n    let petName = formData.get(\"petName\");\n    console.log(\"FORM DATA: \", userId, petName);\n    let response = await axios({\n      method: \"POST\",\n      data: formData,\n      withCredentials: true,\n      url: `http://localhost:4000/report/upload?fileID=${userId}${petName}`,\n    });\n    let { data } = response;\n    dispatch(createReport(data));\n  } catch (error) {\n    dispatch(createReport({ error: error }));\n  }\n};\n\n//Reducer\nlet reportReducer = (state = defaultReport, action) => {\n  switch (action.type) {\n    case CREATE_REPORT:\n      return action.report;\n    case FOUND_PET:\n      return action.foundPet;\n    case GET_REPORT:\n      return action.singleReport;\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import axios from \"axios\";\n\n//Initial State\nconst defaultReport = [];\n\n//Action Types\nconst FOUND_OR_LOST = \"FOUND_OR_LOST\";\nconst GET_REPORTS = \"GET_REPORTS\";\nconst GET_SEARCH_RESULTS = \"GET_SEARCH_RESULTS\";\nconst LOCAL_ACTIVE_PETS = \"LOCAL_ACTIVE_PETS\";\n\n//Action Creators\nconst getAllReports = (report) => ({ type: GET_REPORTS, report });\nconst getFoundOrLost = (petList) => ({ type: FOUND_OR_LOST, petList });\nconst getLocalActivePets = (localActivePets) => ({\n  type: LOCAL_ACTIVE_PETS,\n  localActivePets,\n});\nconst getSearchResults = (searchResults) => ({\n  type: GET_SEARCH_RESULTS,\n  searchResults,\n});\n\n//Thunks\nexport const gettingAllReports = () => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: `http://localhost:4000/report/`,\n    });\n    let { data } = response;\n    dispatch(getAllReports(data));\n  } catch (error) {\n    console.log({ Error: error });\n  }\n};\n\nexport const gettingFoundPetsType = (truthy) => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: `http://localhost:4000/report/foundPets/${truthy}`,\n    });\n    let { data } = response;\n    dispatch(getFoundOrLost(data));\n  } catch (error) {\n    console.log({ Error: error });\n  }\n};\n\nexport const gettingLocalActivePets = () => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      baseURL: `http://localhost:4000/report/homePage`,\n    });\n    let { data } = response;\n    console.log(response);\n    dispatch(getLocalActivePets(data));\n  } catch (error) {\n    console.log({ Error: error });\n  }\n};\n\nexport const gettingSearchResults = (searchValue) => async (dispatch) => {\n  try {\n    let response = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      baseURL: `http://localhost:4000/report/search/${searchValue}`,\n    });\n    let { data } = response;\n    dispatch(getSearchResults(data));\n  } catch (error) {\n    console.log({ Error: error });\n  }\n};\n\n//Reducer\nlet allReports = (state = defaultReport, action) => {\n  switch (action.type) {\n    case FOUND_OR_LOST:\n      return [...action.petList];\n    case GET_REPORTS:\n      return [...action.report];\n    case GET_SEARCH_RESULTS:\n      return [...action.searchResults];\n    case LOCAL_ACTIVE_PETS:\n      return [...action.localActivePets];\n    default:\n      return state;\n  }\n};\n\nexport default allReports;\n","import axios from \"axios\";\n\n//Initial State\nlet initialState = {};\n\n//Action Type\nconst CREATE_COMMENT = \"CREATE_COMMENT\";\n\n//Action Creator\nconst createComment = (comment) => ({ type: CREATE_COMMENT, comment });\n\n//Thunk\nexport const creatingComment =\n  (petCommentId, userId, content, petName) => async (dispatch) => {\n    try {\n      const response = await axios({\n        method: \"POST\",\n        baseURL: \"http://localhost:4000/comment/\",\n        withCredentials: true,\n        data: {\n          petCommentId,\n          userId,\n          content,\n          petName,\n        },\n      });\n      const { data } = response;\n      dispatch(createComment(data));\n    } catch (error) {\n      console.log(error);\n      dispatch(createComment({ error: error }));\n    }\n  };\n\n//Reducer\nlet commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_COMMENT:\n      return action.comment;\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport user from \"./user\";\nimport report from \"./report\";\nimport allReports from \"./allReports\";\nimport comment from \"./comment\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst reducer = combineReducers({ user, report, allReports, comment });\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst pReducer = persistReducer(persistConfig, reducer);\nexport const store = createStore(pReducer, middleware);\nexport const persistor = persistStore(store);\n\nexport * from \"./allReports\";\nexport * from \"./comment\";\nexport * from \"./report\";\nexport * from \"./user\";\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({});\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst prefersDarkMode = window.matchMedia(\n  \"(prefers-color-scheme: dark)\"\n).matches;\n\nlet backgroundColor = prefersDarkMode ? \"#191919\" : \"#ffffff\";\nlet textColor = prefersDarkMode ? \"#ffffff\" : \"#2E3B55\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: { background: backgroundColor },\n  authGrid: {\n    marginTop: \"3%\",\n    paddingBottom: \"3%\",\n    paddingLeft: \"25%\",\n    paddingRight: \"25%\",\n  },\n  authPaper: {\n    marginTop: \"15%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    paddingBottom: \"2%\",\n  },\n  authPaperContainer: { paddingTop: \"2%\" },\n  authFailureMessage: { paddingLeft: \"33%\", paddingRight: \"33%\" },\n  authSecondaryButtons: {\n    paddingBottom: \"3%\",\n    paddingLeft: \"3%\",\n    color: \"white\",\n  },\n  authSecondaryButtonContainer: { marginTop: \"5%\", marginLeft: \"15%\" },\n  authText: { textAlign: \"center\" },\n  authTextField: {\n    marginTop: \"1%\",\n    marginBottom: \"1%\",\n    backgroundColor: \"white\",\n  },\n  authTextContainer: { paddingLeft: \"20%\", paddingRight: \"20%\" },\n  buttonCenter: {\n    margin: \"auto\",\n    display: \"block\",\n  },\n  cardContent: { textAlign: \"center\" },\n  comment: { padding: \"40px 20px\", backgroundColor: backgroundColor },\n  commentButton: { marginTop: \"2%\", marginLeft: \"40%\" },\n  commentContent: { textAlign: \"left\", color: textColor },\n  commentField: { backgroundColor: \"white\" },\n  commentItem: { marginBottom: \"2%\" },\n  commentPostedAt: { textAlign: \"left\", color: \"gray\" },\n  commentSubmit: {\n    marginTop: \"2%\",\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n    paddingBottom: \"2%\",\n  },\n  commentUnauth: {\n    textAlign: \"center\",\n    paddingTop: \"1%\",\n    paddingBottom: \"1%\",\n    color: textColor,\n  },\n  commentUsername: { margin: 0, textAlign: \"left\", color: textColor },\n  footer: { marginTop: \"calc(5% + 60px)\", bottom: 0 },\n  footerIcon: {\n    display: \"inline\",\n    margin: -5,\n    marginLeft: \"1%\",\n    marginTop: -7,\n    fontSize: 30,\n  },\n  footerLink: { color: \"inherit\", display: \"inline\" },\n  footerText: { display: \"inline\", marginLeft: \"2%\" },\n  footerTypography: {\n    marginTop: \"2%\",\n    marginLeft: \"10%\",\n    marginRight: \"10%\",\n    paddingBottom: \"2%\",\n  },\n  gridContainer: { marginTop: \"5%\" },\n  gridItem: {\n    paddingBottom: \"3%\",\n    paddingLeft: \"3%\",\n  },\n  gridPadding: {\n    marginTop: \"14%\",\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n  },\n  image: {\n    margin: \"auto\",\n    display: \"block\",\n    width: \"100px\",\n  },\n  linkDecoration: { textDecoration: \"none\", color: \"black\" },\n  loginFields: {\n    backgroundColor: \"#FFFFFF\",\n    marginRight: \"auto\",\n    marginTop: \"2%\",\n    marginBottom: \"2%\",\n    margin: \"auto\",\n    display: \"inline-block\",\n    marginLeft: \"30px\",\n  },\n\n  mapContainer: {\n    marginLeft: \"38%\",\n    marginRight: \"38%\",\n    marginTop: \"8%\",\n    marginBottom: \"4\",\n  },\n  mapPopUp: { backgroundColor: \"white\" },\n  mapRedirectButton: { marginLeft: \"2%\" },\n  mapZoomOutButton: { marginRight: \"2%\" },\n  markerCount: {\n    color: \"black\",\n  },\n  navBarLink: {\n    textDecoration: \"none\",\n    marginLeft: \"2%\",\n    marginRight: \"2%\",\n    color: textColor,\n  },\n  navbarTitle: {\n    flexGrow: 1,\n  },\n  navAuth: { color: textColor },\n  outSearchLayer: {\n    paddingLeft: \"5%\",\n  },\n  pageInfo: { padding: \"4%\", textAlign: \"center\", marginBottom: \"2%\" },\n  paperCommentHeader: {\n    background: backgroundColor,\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n  },\n  paperCommentTypography: {\n    textAlign: \"center\",\n    paddingTop: \"1%\",\n    paddingBottom: \"1%\",\n    color: textColor,\n  },\n  reportContainer: { padding: \"4%\", marginLeft: \"10%\", marginRight: \"10%\" },\n  reportTextField: {\n    backgroundColor: \"#FFFFFF\",\n    marginTop: \"1%\",\n    marginBottom: \"2%\",\n  },\n  singlePetBody: { marginTop: \"2%\", marginBottom: \"3%\", textAlign: \"center\" },\n  singlePetDate: {},\n  singlePetImage: { paddingLeft: \"2%\", paddingRight: \"2%\" },\n  singlePetTitle: { textAlign: \"center\", paddingTop: \"2%\" },\n  textFieldCenter: {\n    width: \"50%;\",\n    marginLeft: \"33%\",\n    marginTop: \"8%\",\n    display: \"block\",\n  },\n  title: { textAlign: \"center\" },\n  titlePadding: {\n    marginLeft: \"25%\",\n    marginRight: \"25%\",\n    textAlign: \"center\",\n    marginTop: \"16%\",\n    marginBottom: \"6%\",\n  },\n  uploadImage: { width: \"500px\" },\n  whiteText: { color: \"white\" },\n  zoomOutButton: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"2%\",\n    marginBottom: \"2%\",\n    margin: \"auto\",\n  },\n\n  loginRegisterButton: {\n    marginLeft: \"auto\",\n    marginBottom: \"1.75%\",\n    textDecoration: \"none\",\n  },\n  tabs: {\n    marginLeft: \"auto\",\n    // \"&:hover\": {\n    //   background: backgroundColor,\n    // },\n    textDecoration: \"none\",\n    color: textColor,\n  },\n  logoTabs: {\n    textDecoration: \"none\",\n  },\n  tabsContainer: {\n    marginLeft: \"auto\",\n  },\n  logoTabColor: {\n    // \"&:hover\": {\n    //   background: textColor,\n    // },\n    color: textColor,\n    textDecoration: \"none\",\n    marginRight: \"-10\",\n  },\n  icons: {\n    fontSize: \"1.4rem\",\n  },\n  iconLogo: {\n    color: \"white\",\n  },\n  navBarcolor: {\n    backgroundColor: backgroundColor,\n  },\n  responsiveContainer: { marginLeft: \"auto\", backgroundColor },\n  responsiveButtonContainer: { marginLeft: \"auto\", color: textColor },\n  responsiveMenuIconToggle: { fontSize: \"3rem\", color: textColor },\n  tabHeight: { minHeight: \"75px\", height: \"75px\" },\n  reportFormTitles: { textAlign: \"center\" },\n  reactMap: { marginTop: \"10%\", marginLeft: \"10%\" },\n  reactMapButtons: { textDecoration: \"none\", color: \"white\" },\n  navTabs: {\n    display: \"inline\",\n    marginRight: \"1%\",\n    marginBottom: \"-1%\",\n    textDecoration: \"none\",\n  },\n  navLightModeBar: { color: \"#191919\" },\n  searchBarMargin: { marginLeft: \"1%\" },\n  searchBarContainer: { marginTop: \"10%\" },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"../style\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@mui/material/\";\nimport { Grid } from \"@material-ui/core/\";\n\nconst AllReportsLogic = ({ allReports }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container span className={classes.gridContainer}>\n      {allReports.map((pet, idx) => {\n        console.log(\"PET:  \", pet);\n        return (\n          <Grid item xs={12} sm={4} key={idx} className={classes.gridItem}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                alt=\"pet\"\n                height=\"200\"\n                image={\n                  pet.petImageName !== \"SAF Organization\"\n                    ? `http://localhost:4000/file/${pet.petImageName}`\n                    : \"https://i.imgur.com/reEUS1d.jpg\"\n                }\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {pet.petName}\n                </Typography>\n              </CardContent>\n\n              {pet.found === \"lost\" ? (\n                <span>\n                  <Typography\n                    display=\"block\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                  >\n                    Date Lost: {pet.createdAt}\n                  </Typography>\n                  <Typography\n                    display=\"block\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                  >\n                    Last Place Seen: {pet.lastPlaceSeen}\n                  </Typography>\n\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      fullWidth=\"true\"\n                      href={`http://localhost:3000/pet/${pet._id}`}\n                    >\n                      Learn More\n                    </Button>\n                  </CardActions>\n                </span>\n              ) : null}\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default AllReportsLogic;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useStyles from \"../style/index.js\";\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Typography } from \"@mui/material/\";\nimport { creatingComment } from \"../../store\";\n\nconst Comment = ({\n  allComments,\n  petName,\n  petCommentId,\n  userId,\n  updateComments,\n}) => {\n  let helperText = \"Write your comment here\";\n  const classes = useStyles();\n  const [content, setContent] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const createComment = async (petCommentId, userId, content, event) => {\n    event.preventDefault();\n    await dispatch(creatingComment(petCommentId, userId, content, petName));\n    setContent(\"\");\n    updateComments();\n  };\n\n  let commentTitle =\n    allComments.length > 0 ? \"Recent Updates\" : `Help Us Find a Friend`;\n\n  return (\n    <Paper className={classes.paperCommentHeader}>\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n        className={classes.paperCommentTypography}\n        component=\"div\"\n      >\n        {commentTitle}\n      </Typography>\n      <Divider />\n      {allComments.length > 0 ? (\n        <span>\n          {allComments.map((comment, idx) => {\n            let time = comment.createdAt;\n            let index = time.lastIndexOf(\":\");\n            let firstTime = time.slice(0, index);\n            let lastIdx = time.lastIndexOf(\" \") + 1;\n            let AMorPM = time.slice(lastIdx);\n            return (\n              <span className={classes.commentItem}>\n                <Paper className={classes.comment}>\n                  <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item>\n                      <Avatar alt=\"Profile Pic\" />\n                    </Grid>\n                    <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                      <h3 className={classes.commentUsername}>\n                        {comment.username}\n                      </h3>\n                      <p className={classes.commentContent}>\n                        {comment.content}\n                      </p>\n                      <p className={classes.commentPostedAt}>\n                        Posted at: {firstTime} {AMorPM} EST\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </span>\n            );\n          })}\n        </span>\n      ) : null}\n      {userId ? (\n        <form\n          onSubmit={(event) => {\n            createComment(petCommentId, userId, content, event);\n            setContent(\"\");\n          }}\n          className={classes.commentSubmit}\n        >\n          <TextField\n            fullWidth\n            required\n            label={helperText}\n            variant=\"filled\"\n            onChange={(event) => setContent(event.target.value)}\n            className={classes.commentField}\n          />\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.commentButton}\n          >\n            Post Comment\n          </Button>\n        </form>\n      ) : (\n        <Typography\n          gutterBottom\n          variant=\"body1\"\n          className={classes.commentUnauth}\n          component=\"div\"\n        >\n          Sign Up/Login to get involved in the conversation!\n        </Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default Comment;\n","import React, { useEffect } from \"react\";\nimport { Card } from \"@mui/material/\";\nimport { Container } from \"@material-ui/core\";\nimport useStyles from \"../style\";\n\nconst GenericPage = ({ content }) => {\n  const classes = useStyles();\n  console.log(\"CONTENT TYPE: \", content);\n\n  let { type, pageInfo } = content;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Container>\n      <Card className={classes.titlePadding}>\n        <h2>{type}</h2>\n      </Card>\n      {pageInfo ? (\n        <Card className={classes.pageInfo}>\n          <h3>{pageInfo}</h3>\n        </Card>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default GenericPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  IconButton,\n  ListItemText,\n  makeStyles,\n  Drawer,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Search } from \"../childComponents\";\n\nconst ResponsiveNavbar = ({ prefersDarkMode, unauthNavLinks, userID }) => {\n  let history = useHistory();\n  const state = useSelector((state) => state);\n  const { user } = state;\n  let backgroundColor = prefersDarkMode ? \"#191919\" : \"#ffffff\";\n  let textColor = prefersDarkMode ? \"#ffffff\" : \"#2E3B55\";\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const routeTo = (value) => {\n    console.log(value);\n    history.push(value);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    responsiveContainer: { marginLeft: \"auto\", backgroundColor },\n    responsiveMenuIconToggle: { fontSize: \"3rem\", color: textColor },\n    responsiveBackgroundColor: { backgroundColor: textColor },\n    listBackgroundColor: { backgroundColor },\n    listColor: { color: textColor },\n  }));\n\n  let classes = useStyles();\n  return (\n    <>\n      <span className={classes.responsiveBackgroundColor}>\n        <Drawer\n          anchor=\"right\"\n          classes={{ paper: classes.responsiveContainer }}\n          onClose={() => setOpenDrawer(false)}\n          open={openDrawer}\n          onOpen={() => setOpenDrawer(true)}\n        >\n          <span className={classes.responsiveBackgroundColor}>\n            <List className={classes.listBackgroundColor}>\n              <ListItem>\n                <Search setOpenDrawer={setOpenDrawer} />\n              </ListItem>\n              {unauthNavLinks.map((link, idx) => (\n                <ListItem\n                  divider\n                  key={idx}\n                  button\n                  onClick={() => {\n                    setOpenDrawer(false);\n                    routeTo(link.link);\n                  }}\n                >\n                  <ListItemIcon>\n                    <ListItemText className={classes.listColor}>\n                      {link.title}\n                    </ListItemText>\n                  </ListItemIcon>\n                </ListItem>\n              ))}\n              <ListItem\n                divider\n                button\n                onClick={() => {\n                  setOpenDrawer(false);\n                  routeTo(\"/login\");\n                }}\n              >\n                <ListItemIcon>\n                  <ListItemText className={classes.listColor}>\n                    {user._id ? \"Log Out\" : \"Login/Register\"}\n                  </ListItemText>\n                </ListItemIcon>\n              </ListItem>\n            </List>\n          </span>\n        </Drawer>\n      </span>\n      <IconButton\n        className={classes.responsiveContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon className={classes.responsiveMenuIconToggle} />\n      </IconButton>\n    </>\n  );\n};\n\nexport default ResponsiveNavbar;\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Search = ({ setOpenDrawer }) => {\n  let history = useHistory();\n  let [filter, setFilter] = useState(\"\");\n\n  const handleSearchBar = (event) => {\n    setFilter(event);\n  };\n\n  const clearSearch = (event) => {\n    setFilter(\"\");\n  };\n\n  const searchPet = () => {\n    sessionStorage.setItem(\"searchValue\", filter);\n    setFilter(\"\");\n    history.push(`/search`);\n    if (setOpenDrawer) {\n      setOpenDrawer(false);\n    }\n  };\n\n  return (\n    <SearchBar\n      value={filter}\n      onChange={handleSearchBar}\n      onRequestSearch={searchPet}\n      onCancelSearch={clearSearch}\n    />\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../store\";\nimport { AppBar, Tabs, Tab, Toolbar } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useStyles from \"./style/index.js\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { ResponsiveNavbar, Search } from \"./childComponents/\";\nimport PetsIcon from \"@mui/icons-material/Pets\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport AnnouncementIcon from \"@mui/icons-material/Announcement\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport Box from \"@mui/material/Box\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nconst NavigationBar = () => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  let backgroundColor = prefersDarkMode ? \"#191919\" : \"#ffffff\";\n  let textColor = prefersDarkMode ? \"#ffffff\" : \"#2E3B55\";\n\n  let theme = createMuiTheme();\n  theme = responsiveFontSizes(theme);\n\n  const classes = useStyles();\n\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const logOut = async () => await dispatch(logout());\n\n  const [value, setValue] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMatch = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickTab = (e, newValue) => {\n    //The second value contains the current index\n    setValue(newValue);\n  };\n\n  const unauthNavLinks = [\n    {\n      link: \"/reports\",\n      title: \"All Lost Friends\",\n      icon: <PetsIcon className={classes.icons} style={{ color: textColor }} />,\n    },\n    {\n      link: \"/foundFriends\",\n      title: \"Community Accomplishments\",\n      icon: (\n        <CheckCircleIcon\n          className={classes.icons}\n          style={{ color: textColor }}\n        />\n      ),\n    },\n    {\n      link: \"/newReport\",\n      title: \"Create an Alert\",\n      icon: (\n        <AnnouncementIcon\n          className={classes.icons}\n          style={{ color: textColor }}\n        />\n      ),\n    },\n    {\n      link: \"/aboutUs\",\n      title: \"About Us\",\n      icon: <InfoIcon className={classes.icons} style={{ color: textColor }} />,\n    },\n  ];\n\n  return (\n    <AppBar elevation={0}>\n      <Toolbar style={{ backgroundColor }}>\n        <Link\n          to=\"/\"\n          className={classes.logoTabColor}\n          style={{ color: textColor }}\n        >\n          <Tab\n            disableRipple\n            label=\"Save A Friend\"\n            classes={{\n              root: classes.tabHeight,\n            }}\n            className={classes.navTabs}\n          />\n        </Link>\n\n        {isMatch ? (\n          <>\n            <ResponsiveNavbar\n              userID={state.user._id}\n              unauthNavLinks={unauthNavLinks}\n              prefersDarkMode={prefersDarkMode}\n            />\n          </>\n        ) : (\n          <>\n            <Tabs\n              onChange={handleClickTab}\n              className={classes.tabsContainer}\n              classes={{\n                root: classes.tabHeight,\n              }}\n              value={value}\n              TabIndicatorProps={{\n                style: { backgroundColor: backgroundColor },\n              }}\n            >\n              {unauthNavLinks.map((link, idx) => (\n                <Link\n                  key={idx}\n                  to={link.link}\n                  className={classes.tabs}\n                  style={{ color: textColor }}\n                >\n                  <Tab\n                    classes={{\n                      root: classes.tabHeight,\n                    }}\n                    disableRipple\n                    icon={link.icon}\n                    label={link.title}\n                  />\n                </Link>\n              ))}\n            </Tabs>\n\n            <Search className={classes.searchBarMargin} />\n            {state.user._id ? (\n              <Link\n                to=\"/\"\n                className={classes.loginRegisterButton}\n                style={{ color: textColor }}\n                onClick={logOut}\n              >\n                <Tab\n                  classes={{\n                    root: classes.tabHeight,\n                  }}\n                  disableRipple\n                  icon={\n                    <LogoutIcon\n                      style={{ color: textColor, marginTop: \"10%\" }}\n                      className={classes.icons}\n                    />\n                  }\n                  label=\"Logout\"\n                />\n              </Link>\n            ) : (\n              <Link\n                to=\"/login\"\n                className={classes.loginRegisterButton}\n                style={{ color: textColor }}\n                onClick={() => sessionStorage.setItem(\"auth\", \"Login\")}\n              >\n                <Tab\n                  classes={{\n                    root: classes.tabHeight,\n                  }}\n                  disableRipple\n                  icon={\n                    <LoginIcon\n                      style={{ color: textColor, marginTop: \"10%\" }}\n                      className={classes.icons}\n                    />\n                  }\n                  label=\"Login/Register\"\n                />\n              </Link>\n            )}\n          </>\n        )}\n      </Toolbar>\n      {prefersDarkMode ? null : (\n        <Box sx={{ borderBottom: 1 }} className={classes.navLightModeBar} />\n      )}\n    </AppBar>\n  );\n};\n\nexport default NavigationBar;\n","import React, { useState, useEffect } from \"react\";\nimport { login, register, updatingUserInfo } from \"../store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { Alert, Paper } from \"@mui/material/\";\nimport useStyles from \"./style\";\n\nconst UserFields = () => {\n  const state = useSelector((state) => state);\n  const { user } = state;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [updateType, setUpdateType] = useState(\"Login\");\n  let [complete, setComplete] = useState(false);\n  let [loginFail, setLoginFail] = useState(false);\n  let [failReason, setFailReason] = useState(\"\");\n\n  const userAction = async (event) => {\n    event.preventDefault();\n    let check;\n    switch (updateType) {\n      case \"Login\":\n        await dispatch(login(username, password));\n        clearUserFields();\n        if (user.error) {\n          let value = user.error ? user.error : null;\n          setFailReason(value);\n          setLoginFail(true);\n        }\n        break;\n      case \"Password Reset\":\n        check = passwordCheck();\n        if (check) {\n          await dispatch(\n            updatingUserInfo(username, password, email, updateType)\n          );\n          clearUserFields();\n          setUpdateType(\"Login\");\n        }\n        break;\n      case \"Register\":\n        check = passwordCheck();\n        if (check) {\n          await dispatch(register(username, password, email));\n          clearUserFields();\n        }\n        break;\n      default:\n        return [];\n    }\n  };\n\n  const passwordCheck = () => {\n    if (password === passwordConfirm) return true;\n    else {\n      setFailReason(\n        \"Please use the same password phrase for both password fields\"\n      );\n      setLoginFail(true);\n      return false;\n    }\n  };\n\n  const changeUserFields = (event, value) => {\n    event.preventDefault();\n    sessionStorage.setItem(\"auth\", value);\n    clearUserFields();\n    setUpdateType(value);\n  };\n\n  const clearUserFields = () => {\n    setUsername(\"\");\n    setPassword(\"\");\n    setPasswordConfirm(\"\");\n    setUpdateType(\"Login\");\n    setComplete(\"\");\n    setLoginFail(\"\");\n    setEmail(\"\");\n  };\n\n  let infoFields = [\n    {\n      value: username,\n      function: setUsername,\n      eventName: \"username\",\n      label: \"Enter Username\",\n      type: \"text\",\n    },\n    {\n      value: password,\n      function: setPassword,\n      eventName: \"password\",\n      label:\n        updateType === \"Password Reset\"\n          ? \"Enter New Password\"\n          : \"Enter Password\",\n      type: \"password\",\n    },\n    {\n      value: passwordConfirm,\n      function: setPasswordConfirm,\n      eventName: \"passwordConfirm\",\n      label:\n        updateType === \"Password Reset\"\n          ? \"Enter New Password Again\"\n          : \"Enter Password Again\",\n      type: \"password\",\n    },\n    {\n      value: email,\n      function: setEmail,\n      eventName: \"email\",\n      label: \"Enter Email Address\",\n      type: \"email\",\n    },\n  ];\n\n  let secondMenu = [\n    {\n      msg:\n        updateType === \"Register\"\n          ? \"I already have an account\"\n          : \"I need an account\",\n      valueChange: updateType === \"Register\" ? \"Login\" : \"Register\",\n    },\n    { msg: \"Forgot Password?\", valueChange: \"Password Reset\" },\n  ];\n\n  const arrayType = () => {\n    switch (updateType) {\n      case \"Login\":\n        return infoFields.slice(0, 2);\n      case \"Password Reset\":\n      case \"Register\":\n      default:\n        return infoFields;\n    }\n  };\n  let array = arrayType();\n\n  useEffect(() => {\n    let auth = sessionStorage.getItem(\"auth\");\n    if (updateType !== \"Login\" && auth === \"Login\") {\n      setUpdateType(\"Login\");\n      setLoginFail(false);\n    }\n  });\n\n  if (user._id) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <Container>\n        <Paper className={classes.authPaper}>\n          <form onSubmit={(event) => userAction(event)}>\n            <Container>\n              <Container className={classes.authPaperContainer}>\n                {array.map((field, idx) => {\n                  return (\n                    <Container key={idx} className={classes.authTextContainer}>\n                      <p className={classes.authText}>{field.label}</p>\n                      <Container>\n                        <TextField\n                          variant=\"filled\"\n                          required\n                          fullWidth\n                          name={field.eventName}\n                          type={field.type}\n                          value={field.value}\n                          className={classes.authTextField}\n                          inputProps={{\n                            style: {\n                              textAlign: \"center\",\n                            },\n                          }}\n                          onChange={(event) =>\n                            field.function(event.target.value)\n                          }\n                        />\n                      </Container>\n                    </Container>\n                  );\n                })}\n              </Container>\n            </Container>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.zoomOutButton}\n            >\n              {updateType}\n            </Button>\n          </form>\n        </Paper>\n        {loginFail ? (\n          <Container className={classes.authFailureMessage}>\n            <Alert fullWidth severity=\"error\" variant=\"string\">\n              {failReason !== \"No User Exists\"\n                ? failReason\n                : \"Incorrect Login Credentials\"}\n            </Alert>\n          </Container>\n        ) : null}\n        <Grid container span className={classes.authSecondaryButtonContainer}>\n          {secondMenu.map((field, idx) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              key={idx}\n              className={classes.authSecondaryButtons}\n            >\n              <Button\n                className={classes.whiteText}\n                onClick={(event) => changeUserFields(event, field.valueChange)}\n              >\n                {field.msg}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    );\n  }\n};\n\nexport default UserFields;\n","import React, { useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gettingLocalActivePets } from \"../store\";\n\nimport { AllReportsLogic, GenericPage } from \"./childComponents\";\n\nconst Home = () => {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { allReports } = state;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(gettingLocalActivePets());\n  }, []);\n  let contentObj = {\n    type:\n      allReports.length > 0\n        ? \"Lost Pets in Your Area\"\n        : \"No Lost  Pets  in  Your Area!  :)\",\n    pageInfo: \"\",\n  };\n  return (\n    <Container>\n      <GenericPage content={contentObj} />\n      {allReports.length > 0 ? (\n        <AllReportsLogic allReports={allReports} />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { reportCreation } from \"../store\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Paper from \"@mui/material/Paper\";\nimport { Redirect } from \"react-router-dom\";\nimport useStyles from \"./style/index.js\";\nimport { GenericPage } from \"./childComponents\";\n\nconst CreateReportForm = () => {\n  let [petName, setPetName] = useState(\"\");\n  let [lastPlaceSeen, setLastPlace] = useState(\"\");\n  let [redirect, setRedirect] = useState(false);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { _id, username, email } = user;\n  const classes = useStyles();\n\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(\"\");\n  const [uploadedImage, setUploadedImage] = useState({});\n\n  const createReport = async () => {\n    if (!uploadedImage.name) alert(\"Image Upload Failed\");\n    let formData = new FormData();\n    const userId = _id;\n    const contactEmail = email;\n    formData.append(\"file\", uploadedImage);\n    formData.append(\"userId\", userId);\n    formData.append(\"username\", username);\n    formData.append(\"contactEmail\", contactEmail);\n    formData.append(\"petName\", petName);\n    formData.append(\"lastPlaceSeen\", lastPlaceSeen);\n    await dispatch(reportCreation(formData));\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    if (redirect === true) {\n      window.scrollTo(0, 0);\n      setRedirect(false);\n    }\n  }, []);\n\n  const fields = [\n    {\n      value: petName,\n      label: \"Pet's Name\",\n      eventName: \"petName\",\n      type: \"text\",\n      function: setPetName,\n    },\n    {\n      value: lastPlaceSeen,\n      label: \"Enter Complete Address Here\",\n      eventName: \"lastPlaceSeen\",\n      type: \"text\",\n      function: setLastPlace,\n    },\n  ];\n\n  let contentObj = {\n    type: `Hi ${username}, let's save your pet!`,\n    pageInfo: \"\",\n  };\n\n  if (redirect === true) {\n    return <Redirect to=\"/map\" />;\n  } else if (username) {\n    return (\n      <Container>\n        <GenericPage content={contentObj} />\n        <Paper className={classes.reportContainer}>\n          <Container maxWidth=\"sm\">\n            <form\n              onSubmit={(event) => {\n                event.preventDefault();\n                createReport();\n                <Redirect to=\"/map\" />;\n              }}\n            >\n              {fields.map((field, idx) => {\n                return (\n                  <div key={idx}>\n                    <h4 className={classes.reportFormTitles}>{field.label}:</h4>\n                    <TextField\n                      variant=\"filled\"\n                      name={field.eventName}\n                      type={field.type}\n                      value={field.value}\n                      required\n                      fullWidth\n                      onChange={(event) => field.function(event.target.value)}\n                      className={classes.reportTextField}\n                    />\n                    <br />\n                  </div>\n                );\n              })}\n              <input\n                className={classes.textFieldCenter}\n                type=\"file\"\n                onChange={(event) => {\n                  setUploadedImageUrl(\n                    URL.createObjectURL(event.target.files[0])\n                  );\n                  setUploadedImage(event.target.files[0]);\n                }}\n              />\n              <br />\n              <img\n                src={\n                  !uploadedImageUrl.trim()\n                    ? \"Please Upload an Image\"\n                    : uploadedImageUrl\n                }\n                alt=\"Upload\"\n                className={classes.image}\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.buttonCenter}\n              >\n                Create a Lost Pet Post\n              </Button>\n            </form>\n          </Container>\n        </Paper>\n      </Container>\n    );\n  } else {\n    return <Redirect to=\"login\" />;\n  }\n};\n\nexport default CreateReportForm;\n","import React, { useEffect } from \"react\";\nimport { gettingFoundPetsType } from \"../store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { AllReportsLogic, GenericPage } from \"./childComponents\";\n\nconst AllReports = () => {\n  const state = useSelector((state) => state);\n  const { allReports } = state;\n  const dispatch = useDispatch();\n  let contentObj = { type: \"All Active Reports\", pageInfo: \"\" };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(gettingFoundPetsType(\"lost\"));\n    sessionStorage.setItem(\"searchValue\", \"default\");\n  }, []);\n\n  return (\n    <Container>\n      <GenericPage content={contentObj} />\n      {allReports.length > 0 ? (\n        <AllReportsLogic allReports={allReports} />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default AllReports;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gettingFoundPetsType } from \"../store\";\nimport useSupercluster from \"use-supercluster\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport ReactMapGL, { Marker, FlyToInterpolator, Popup } from \"react-map-gl\";\nimport { Link } from \"react-router-dom\";\nimport Brightness1Icon from \"@material-ui/icons/Brightness1\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./style\";\nimport { Redirect } from \"react-router-dom\";\nlet accessToken = process.env.REACT_APP_MAPBOX_API;\n\nconst Map = ({ match }) => {\n  let history = useHistory();\n  const classes = useStyles();\n  let [zipCodes, setZipCodes] = useState({});\n  const state = useSelector((state) => state);\n  let { allReports, report } = state;\n\n  const initalDispatch = async () => {\n    await dispatch(gettingFoundPetsType(\"lost\"));\n    let obj = {};\n    for (let i = 0; i < allReports.length; i++) {\n      let current = allReports[i];\n      let { geo, petName, _id } = current;\n      let { longitude, latitude } = geo;\n      let value = `${longitude},${latitude}`;\n      if (!obj[value]) obj[value] = [petName + \" \" + _id];\n      else obj[value].push(petName + \" \" + _id);\n    }\n    setZipCodes(obj);\n  };\n\n  let [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"95vh\",\n    latitude: report.data ? report.data.latitude : 40.68421,\n    longitude: report.data ? report.data.longitude : -73.83163,\n    zoom: 14,\n  });\n\n  //GRAB VALUES FROM IP API FOR LAT/LONG\n\n  let [notSwitched, setNotSwitched] = useState(true);\n\n  const dispatch = useDispatch();\n  const ObjSize = (obj) => {\n    let size = 0;\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) size += 1;\n    }\n    return size;\n  };\n\n  useEffect(() => {\n    if (Object.keys(zipCodes) < 1) initalDispatch();\n\n    let objectSize = ObjSize(report);\n\n    if (objectSize > 0) {\n      let singleReport = \"\";\n      if (report.data) singleReport = report.data.geo;\n      else singleReport = report.geo;\n      if (singleReport && notSwitched) {\n        let longitude = singleReport.longitude;\n        let latitude = singleReport.latitude;\n        setViewport({ ...viewport, longitude, latitude });\n        setNotSwitched(false);\n      }\n    } else {\n      setNotSwitched(false);\n    }\n  });\n\n  const handleViewportChange = (viewport) => {\n    setViewport(viewport);\n  };\n\n  const mapRef = useRef();\n\n  const points = allReports.map((report) => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: report._id,\n      category: \"pet search\",\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        parseFloat(report.geo.longitude),\n        parseFloat(report.geo.latitude),\n      ],\n    },\n  }));\n\n  const bounds = mapRef.current\n    ? mapRef.current.getMap().getBounds().toArray().flat()\n    : null;\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    zoom: viewport.zoom,\n    bounds,\n    options: { radius: 75, maxZoom: 16 },\n  });\n\n  const [selectedObj, setSelectObj] = useState({});\n  const [multSelectedObj, setMultObjs] = useState({});\n\n  if (!report.data) {\n    return <Redirect to=\"/reports\" />;\n  } else {\n    return (\n      <div>\n        <ReactMapGL\n          {...viewport}\n          minZoom={5}\n          maxZoom={20}\n          mapboxApiAccessToken={accessToken}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          onViewportChange={(viewport) => handleViewportChange(viewport)}\n          ref={mapRef}\n          attributionControl={false}\n          // className={classes.reactMap}\n        >\n          {clusters.map((cluster) => {\n            let [longitude, latitude] = cluster.geometry.coordinates;\n            // longitude = Number(longitude.toFixed(6));\n            // latitude = Number(latitude.toFixed(6));\n            const { cluster: isCluster, point_count: pointCount } =\n              cluster.properties;\n\n            if (isCluster) {\n              return (\n                <Marker\n                  key={cluster.id}\n                  latitude={latitude}\n                  longitude={longitude}\n                >\n                  <Container\n                    style={{\n                      width: `${10 + (pointCount / points.length) * 20}px`,\n                      height: `${10 + (pointCount / points.length) * 20}px`,\n                    }}\n                    onClick={() => {\n                      setSelectObj({});\n                      const expansionZoom =\n                        supercluster.getClusterExpansionZoom(cluster.id);\n\n                      setViewport({\n                        ...viewport,\n                        latitude,\n                        longitude,\n                        zoom: expansionZoom,\n                        transitionInterpolator: new FlyToInterpolator({\n                          speed: 2,\n                        }),\n                        transitionDuration: \"auto\",\n                      });\n                      let coords = cluster.geometry.coordinates;\n                      let long = coords[0].toFixed(5).toString();\n                      let lat = coords[1].toFixed(5).toString();\n                      // console.log(\"Cluster ID\", {\n                      //   long,\n                      //   lat,\n                      // });\n                      if (zipCodes[long + \",\" + lat]) {\n                        let values = zipCodes[long + \",\" + lat];\n                        let arrObj = {\n                          names: values,\n                          long: Number(long),\n                          lat: Number(lat),\n                        };\n                        setMultObjs(arrObj);\n                      } else console.log(\"fuck off\", zipCodes);\n                    }}\n                  >\n                    <Brightness1Icon fontSize=\"small\" color=\"primary\" />\n                    <h3 className={classes.markerCount}>{pointCount}</h3>\n                  </Container>\n                </Marker>\n              );\n            }\n            return (\n              <Marker\n                key={cluster.properties.crimeId}\n                latitude={latitude}\n                longitude={longitude}\n              >\n                <Container\n                  onClick={() => {\n                    setMultObjs({});\n                    let long = cluster.geometry.coordinates[0].toString();\n                    let lat = cluster.geometry.coordinates[1].toString();\n                    if (zipCodes[long + \",\" + lat]) {\n                      let value = zipCodes[long + \",\" + lat][0];\n                      let lastIdx = value.indexOf(\" \");\n                      let name = value.slice(0, lastIdx);\n                      let id = value.slice(lastIdx + 1);\n\n                      setSelectObj({ id, name, long, lat });\n                    }\n                    setViewport({\n                      width: window.innerWidth,\n                      height: window.innerHeight * 0.84,\n                      latitude,\n                      longitude,\n                      zoom: 20,\n                      transitionInterpolator: new FlyToInterpolator({\n                        speed: 2,\n                      }),\n                      transitionDuration: \"auto\",\n                    });\n                  }}\n                >\n                  <Brightness1Icon fontSize=\"small\" color=\"primary\" />\n                </Container>\n              </Marker>\n            );\n          })}\n          {multSelectedObj.names ? (\n            <Popup\n              latitude={Number(multSelectedObj.lat)}\n              longitude={Number(multSelectedObj.long)}\n              closeButton={false}\n            >\n              <Container>\n                {multSelectedObj.names.map((value, idx) => {\n                  let lastIdx = value.indexOf(\" \");\n                  let name = value.slice(0, lastIdx);\n                  let id = value.slice(lastIdx + 1);\n                  return (\n                    <Container\n                      className={classes.mapPopUp}\n                      onClick={() => history.push(`/pet/${id}`)}\n                    >\n                      <Link\n                        to={`/pet/${id}`}\n                        className={classes.linkDecoration}\n                      >\n                        <h3 key={idx}>{name}</h3>\n                      </Link>\n                    </Container>\n                  );\n                })}\n              </Container>\n            </Popup>\n          ) : null}\n\n          {selectedObj.id ? (\n            <Popup\n              latitude={Number(selectedObj.lat)}\n              longitude={Number(selectedObj.long)}\n              closeButton={false}\n            >\n              <Link\n                to={`/pet/${selectedObj.id}`}\n                className={classes.linkDecoration}\n              >\n                <h2>{selectedObj.name}</h2>\n              </Link>\n            </Popup>\n          ) : null}\n        </ReactMapGL>\n        <Grid container span>\n          <Grid item xs={6} className={classes.cardContent}>\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              className={classes.reactMapButtons}\n              onClick={() => {\n                setSelectObj({});\n                setMultObjs({});\n\n                setViewport({\n                  zoom: 10,\n                  width: \"100vw\",\n                  height: \"95vh\",\n                  latitude: report.data ? report.data.geo.latitude : 40.68421,\n                  longitude: report.data\n                    ? report.data.geo.longitude\n                    : -73.83163,\n                });\n              }}\n            >\n              Zoom Out\n            </Button>\n          </Grid>\n\n          <Grid item xs={6} className={classes.cardContent}>\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              className={classes.reactMapButtons}\n              onClick={() => {\n                let singularPet = report.data;\n\n                if (singularPet) {\n                  history.push(`/pet/${singularPet.query._id}`);\n                } else {\n                  history.push(`/reports`);\n                }\n              }}\n            >\n              {report.data\n                ? `Back to ${report.data.petName}'s page`\n                : \"Our Lost Friends\"}\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gettingSingleReport, petWasFound } from \"../store\";\nimport { Comment } from \"./childComponents\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  CardActions,\n  CardMedia,\n  Button,\n  Typography,\n  Paper,\n} from \"@mui/material/\";\nimport { Grid } from \"@material-ui/core/\";\nimport useStyles from \"./style\";\n\nconst SinglePet = ({ match }) => {\n  const classes = useStyles();\n  let [redirect, setRedirect] = useState(false);\n  let [petFoundRedirect, setPetFoundRedirect] = useState(false);\n  const allState = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { report, user } = allState;\n  const { id } = match.params;\n\n  const updateComments = () => {\n    dispatch(gettingSingleReport(id));\n  };\n\n  const foundPet = () => {\n    dispatch(petWasFound(id));\n    // history.push(\"/foundFriends\");\n    setPetFoundRedirect(true);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(gettingSingleReport(id));\n    // eslint-disable-next-line\n  }, []);\n\n  if (redirect === true) {\n    return <Redirect to=\"/map\" />;\n  } else if (petFoundRedirect === true) {\n    <Redirect to=\"/\" />;\n  } else if (report.data) {\n    let { commentData, data } = report;\n    console.log(\"REPORT HERE:\", report.commentData);\n    return (\n      <Grid className={classes.gridPadding}>\n        <Paper>\n          <Card>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n              className={classes.singlePetTitle}\n              component=\"div\"\n            >\n              {data.petName}\n            </Typography>\n\n            <CardMedia\n              className={classes.singlePetImage}\n              component=\"img\"\n              alt=\"pet\"\n              height=\"500\"\n              // image={`http://localhost:4000/report/pet/${file._id}/${data.petImageName}`},\n              image={`http://localhost:4000/file/${data.petImageName}`}\n            />\n            <span className={classes.singlePetBody}>\n              <Typography\n                display=\"block\"\n                variant=\"body1\"\n                color=\"text.secondary\"\n                className={classes.singlePetBody}\n              >\n                <strong> Date Lost: </strong>\n                {data.createdAt}\n              </Typography>\n              <Typography\n                display=\"block\"\n                variant=\"body1\"\n                color=\"text.secondary\"\n              >\n                <strong>Last Place Seen:</strong> {data.lastPlaceSeen}\n              </Typography>\n            </span>\n            <CardActions>\n              <Button\n                size=\"large\"\n                fullWidth=\"true\"\n                onClick={() => setRedirect(true)}\n              >\n                Find me on the map!\n              </Button>\n            </CardActions>\n            {data.userId === user._id ? (\n              <CardActions>\n                <Button\n                  size=\"large\"\n                  fullWidth=\"true\"\n                  onClick={() => foundPet()}\n                >\n                  Found Me?\n                </Button>\n              </CardActions>\n            ) : null}\n          </Card>\n        </Paper>\n        <br />\n        {report.commentData.length > 0 ? (\n          <Comment\n            allComments={commentData}\n            petCommentId={data._id}\n            userId={user._id}\n            updateComments={updateComments}\n            petName={data.petName}\n          />\n        ) : (\n          <Comment\n            allComments={commentData}\n            petCommentId={data._id}\n            userId={user._id}\n            updateComments={updateComments}\n            petName={data.petName}\n          />\n        )}\n      </Grid>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default SinglePet;\n","import React, { useEffect } from \"react\";\nimport { gettingFoundPetsType } from \"../store\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { AllReportsLogic, GenericPage } from \"./childComponents\";\nimport { Container } from \"@material-ui/core\";\n\nconst FoundPets = () => {\n  const state = useSelector((state) => state);\n  const { allReports } = state;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(gettingFoundPetsType(\"found\"));\n  }, []);\n\n  let pageInfo =\n    \"We present to you,  our wall of success. Every pet in shown below, has been a family member that went missing at some point in time. Our community of friends worked together tirelessly to help everyone find their pet.  With this wall of success, we hope to comfort and assure newcomers that their pet can be rescued!\";\n  let contentObj = { type: \"All Found Pets\", pageInfo };\n\n  return (\n    <Container>\n      <GenericPage content={contentObj} />\n\n      {allReports.length > 0 ? (\n        <AllReportsLogic allReports={allReports} />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default FoundPets;\n","import React from \"react\";\nimport { GenericPage } from \"./childComponents\";\n\nconst ErrorPage = () => {\n  let contentObj = {\n    type: `404 Not Found`,\n    pageInfo: \"\",\n  };\n  return <GenericPage content={contentObj} />;\n};\n\nexport default ErrorPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { AllReportsLogic, GenericPage } from \"./childComponents\";\nimport useStyles from \"./style\";\nimport axios from \"axios\";\n\nconst SearchPage = () => {\n  const classes = useStyles();\n  let [searchResults, setSearchResults] = useState(\"\");\n  let searchValue = sessionStorage.getItem(\"searchValue\") || \"default\";\n\n  const getResult = async () => {\n    let response = await axios({\n      method: \"GET\",\n      withCredentials: true,\n      baseURL: `http://localhost:4000/report/search/${searchValue}`,\n    });\n    let { data } = response;\n    setSearchResults(data);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getResult();\n  });\n\n  let contentObj = {\n    type: `${searchResults.length} Results Found`,\n    pageInfo: \"\",\n  };\n  return (\n    <Container className={classes.searchBarContainer}>\n      {searchResults.length > 0 ? (\n        <AllReportsLogic allReports={searchResults} />\n      ) : (\n        <GenericPage content={contentObj} />\n      )}\n    </Container>\n  );\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport { GenericPage } from \"./childComponents\";\n\nlet pageInfo = `\"Save-A-Friend\" is a group of people that far outnumbers the founders of this project(which would be just 1). Our goal is to create a large community that reaches beyond borders and places a focus on micro level in the everyday life. While a dog is typically considered man's best friend, we believe that every pet that belongs to a family, is a family member themselves and deserve to have the utmost attention brought on to them in the unfortunate event that they go missing. We believe that our local community members have the potential to become heroes!`;\n\nconst AboutUs = () => {\n  let contentObj = { type: \"About Us\", pageInfo };\n  return <GenericPage content={contentObj} />;\n};\n\nexport default AboutUs;\n","import React, { useMemo } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport {\n  AboutUs,\n  AllReports,\n  Authentication,\n  CreateReportForm,\n  ErrorPage,\n  FoundPets,\n  Home,\n  Map,\n  NavigationBar,\n  SearchPage,\n  SinglePet,\n} from \"./components\";\nimport { Typography } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport useStyles from \"./components/style\";\n\nlet routes = [\n  { path: \"/\", component: Home },\n  { path: \"/login\", component: Authentication },\n  { path: \"/search\", component: SearchPage },\n  { path: \"/reports\", component: AllReports },\n  { path: \"/newReport\", component: CreateReportForm },\n  { path: \"/map\", component: Map },\n  { path: \"/pet/:id\", component: SinglePet },\n  { path: \"/foundFriends\", component: FoundPets },\n  { path: \"/aboutUs\", component: AboutUs },\n  { path: \"*\", component: ErrorPage },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? \"dark\" : \"light\",\n        },\n        typography: {\n          fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n          ].join(\",\"),\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const Footer = () => {\n    let currentYear = new Date().getFullYear();\n    return (\n      <Typography inline className={classes.footerTypography}>\n        <p\n          className={classes.footerText}\n        >{`${currentYear} Save-A-Friend Org`}</p>\n        <p className={classes.footerText}>{\"Let's Connect\"}</p>\n\n        <a\n          href=\"https://www.linkedin.com/in/amneet-sandhu/\"\n          className={classes.footerLink}\n        >\n          <LinkedInIcon className={classes.footerIcon} />\n        </a>\n      </Typography>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <div>\n          <NavigationBar />\n          <main>\n            <Switch>\n              {routes.map((route, idx) => (\n                <Route\n                  key={idx}\n                  exact\n                  path={route.path}\n                  component={route.component}\n                />\n              ))}\n            </Switch>\n          </main>\n        </div>\n        <footer className={classes.footer}>\n          <Footer />\n        </footer>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./store\";\nimport history from \"./history\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store} history={history}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}